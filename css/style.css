:root {
  --spaceColorDark: #01012c;
  --spaceColor: #0a0a5e;
  
  /* Light */
  --primary_Light: #ddddff;
  --secondary_Light: #000033;
  
  --primaryTop_Light: color-mix(in srgb, var(--primary_Light) 90%, var(--secondary_Light));
  --primaryTransparent_Light: color-mix(in srgb, var(--primary_Light) 30%, transparent);
  --secondaryTransparent_Light: color-mix(in srgb, var(--secondary_Light) 15%, transparent);
  
  --contrast_Light: #e61e82;
  --contrastLow_Light: color-mix(in hsl, var(--secondary_Light) 10%, var(--contrast_Light));
  --contrastTransparent_Light: color-mix(in srgb, var(--contrast_Light) 30%, transparent);
  --green_Light: #24bd1c;
  
  /* Dark */
  /* needs more contrast */
  
  --primary_Dark: #000011;
  --secondary_Dark: #ddddee;  /* Moins lumineux pour être plus agréable à lire */
  
  --primaryTop_Dark: color-mix(in srgb, var(--primary_Dark) 78%, var(--secondary_Dark));
  --primaryTransparent_Dark: color-mix(in srgb, var(--primary_Dark) 15%, transparent);
  --secondaryTransparent_Dark: color-mix(in srgb, var(--secondary_Dark) 20%, transparent);
  
  --contrast_Dark: #fc53a8;
  --contrastLow_Dark: color-mix(in hsl, var(--secondary_Dark) 15%, var(--contrast_Dark));
  --contrastTransparent_Dark: color-mix(in srgb, var(--contrast_Dark) 30%, transparent);
  --green_Dark: #24bd1c;
  
  --primary: var(--primary_Dark);
  --primaryTop: var(--primaryTop_Dark);
  --secondary: var(--secondary_Dark);
  --primaryTransparent: var(--primaryTransparent_Dark);
  --secondaryTransparent: var(--secondaryTransparent_Dark);
  --contrast: var(--contrast_Dark);
  --contrastLow: var(--contrastLow_Dark);
  --contrastTransparent: var(--contrastTransparent_Dark);
  --green: var(--green_Dark);
  
  /*--primary: var(--primary_Light);
  --primaryTop: var(--primaryTop_Light);
  --secondary: var(--secondary_Light);
  --primaryTransparent: var(--primaryTransparent_Light);
  --secondaryTransparent: var(--secondaryTransparent_Light);
  --contrast: var(--contrast_Light);
  --contrastLow: var(--contrastLow_Light);
  --contrastTransparent: var(--contrastTransparent_Light);
  --green: var(--green_Light);*/
  
  --activatedHigh: #d55;
  --activatedLow: #744;
}

* {
  box-sizing: border-box;
}
  
body {
  margin: 0;
  min-height: 100vh;
  
  font-family: sans-serif;
  color: var(--secondary);
  background-color: var(--primary);
  
  overflow-x: hidden;
  overflow-y: auto;
}

#main {
  min-height: 100vh;
  background-color: var(--primary);
}

/* HEADER */
header {
  --offset: 0.6vw;
  --height: 60px;
  --padding: 8px;
  
  position: sticky;
  
  z-index: 10;
  top: var(--offset);
  left: var(--offset);
  
  display: flex;
  align-items: center;
  
  width: calc( 100% - 2*var(--offset) - var(--padding) );
  height: var(--height);
  
  padding: var(--padding) calc(var(--padding) * 2);
  margin-bottom: calc(var(--padding) + var(--offset));
  border-radius: calc(var(--offset)/2);
  background-color: var(--secondaryTransparent);
  
  /* ressource intensive */
  backdrop-filter: blur(5px);
  box-shadow: 0 2px 2px -2px var(--secondary);
}
.headerField:first-of-type {
  margin-left: auto;
}
@keyframes headerSepAnim {
  from {
    height: 50%;
    top: 25%;
  } to {
    height: 80%;
    top: 10%;
  }
}
.headerField {
  margin-inline: 1vw;
  user-select: none;
  
  padding: 10px;
  border-radius: 20px;
  
  transition: all 0.5s;
}
.headerField:hover {
  background-color: var(--secondaryTransparent);
  box-shadow: 0 1px 3px -3px var(--primary);
  border-radius: 5px;
  
  cursor: pointer;
}
.headerField:active {
  border-radius: 10px;
  transition: all 0.3s;
}
.headerField + .headerField {
  position: relative;
}
.headerField + .headerField::before {
  content: "";
  
  position: absolute;
  top: 10%;
  left: -1vw;
  
  width: 2px;
  height: 80%;
  
  background-color: var(--secondary);
  opacity: 0.2;
  
  animation: headerSepAnim 0.5s;
}
#logo {
  height: 100%;
  
  transition: 0.3s;
}
#logo:hover {
  rotate: -5deg;
  scale: 1.1;
  
  filter: drop-shadow(0 2px 2px var(--primaryTransparent));
  
  cursor: pointer;
}
#logo:active {
  rotate: -5deg;
  scale: 0.98;
}
footer {
  display: flex;
  align-items: center;
  
  height: 20vh;
  padding: 5vw;
  padding-top: 6vw;
  margin-top: 50px;
  
  background-color: var(--primary);
  border-top: solid 2px var(--primaryTop);
  border-radius: 10% 10% 0 0;
  box-shadow: 0 -2px 6px var(--secondaryTransparent);
  
  color: color-mix(in srgb, var(--primary), var(--secondary) 60%);
}
#goUp {
  padding: 12px 20px;
  border-radius: 10px;
  margin-left: auto;
  
  border: none;
  background-color: var(--primaryTop);
  color: var(--contrastLow);
  outline: solid 1.5px var(--contrastLow);
  box-shadow: 0 4px 8px -2px var(--contrastLow);
  
  cursor: pointer;
  transition: all 0.2s;
}
#goUp:hover {
  transform: translateY(2px) scale(0.98);
  box-shadow: 0 1px 8px var(--contrastLow);
  color: var(--contrast);
  outline-color: var(--contrast);
}
#goUp:active {
  transform: translateY(4px) scale(0.96);
  box-shadow: 0 1px 6px var(--contrast);
}

.section b {
  color: var(--secondary);
  transition: color 0.5s, text-shadow 0.5s;
}
.sectionSeen b {
  color: var(--contrastLow);
}
b {
  color: var(--contrastLow);
}
b:hover {
  color: var(--contrast);
  text-shadow: 0 2px 2px var(--primaryTransparent);
  transition: color 0.2s, text-shadow 0.2s;
}
p {
  white-space: pre-line;
  text-align: justify;
}
ul {
  gap: 5px;
}
ul {
  border-left: solid 2px var(--secondaryTransparent);
  border-radius: 2px;
  transition: border-left-color 1s;
}
ul:hover {
  border-left-color: var(--contrastLow);
}
li {
  margin-block: 0.5em;
  transition: padding-left 0.2s ease-out;
}
li::marker {
  color: var(--secondaryTransparent);
  transition: color 0.5s;
}
li:hover {
  padding-left: 2px;
}
li:hover::marker {
  color: var(--contrastLow);
}
a {
  position: relative;
  
  color: transparent;
  background: linear-gradient(135deg, var(--contrastLow), var(--contrast));
  background-clip: text;
}
a::before {
  content: "";
  
  position: absolute;
  left: 8px;
  bottom: 0;
  width: calc(100% - 16px);
  height: 1px;
  
  background: linear-gradient(to right, var(--contrastLow), var(--contrast));
  border-radius: 2px;
  
  transition: all 0.4s cubic-bezier(0.1, 1.3, 0.6, 1.2);
}
a:hover::before {
  left: 0;
  width: 100%;
}
a:active::before {
  left: 12px;
  width: calc(100% - 24px);
}
math {
  background-color: var(--primaryTransparent);
  padding: 0.35em;
  margin: 0.1em;
  border-radius: 0.2em;
}
/* tables */
table {
  border-collapse: collapse;
  letter-spacing: 1px;
  background-color: var(--primaryTransparent);
}
caption {
  padding: 10px;
  font-weight: bold;
  border: solid 2px var(--secondaryTransparent);
  border-bottom: none;
  background-color: var(--primaryTransparent);
}
thead,
tfoot {
  background-color: var(--primaryTransparent);
}
th,
td {
  padding: 8px 10px;
  border: solid 2px var(--secondaryTransparent);
}
tbody > tr:nth-of-type(even) {
  background-color: var(--primaryTop);
}



/* HERO */
.hero {
  position: relative;

  --background: var(--primary);
  display: flex;
  align-items: center;
  
  padding: 4vw calc(5vw + 15px);
  height: 80vh;
  background: var(--background);
}
@keyframes heroTextAnim {
  from {
    transform-origin: left;
    opacity: 0;
    transform: translateX(-50px) scale(1.2);
  } to {
    opacity: 1;
    transform: none;
  }
}
.heroText {
  position: relative;
  width: max-content;
  height: max-content;
  
  z-index: 1;
  cursor: default;
  
  text-shadow: -2px 2px 2px var(--primaryTransparent);
  
  animation: heroTextAnim 1.5s;
  transition: text-shadow 0.4s ease;
}
.heroText:hover {
  text-shadow: -4px 4px 0px var(--primaryTransparent);
}
.heroText :last-child {
  margin-bottom: 0;
}
.heroText > h1 {
  font-size: 3rem;
}
.heroText > h2 {
  font-size: 1.8rem;
}
@keyframes heroTextBeforeAnim {
  from {
    width: 5px;
    height: 5px;
    opacity: 0;
  } to {
    width: 30px;
    height: 30px;
    opacity: 1;
  }
}
.heroText::before {
  content: "";
  position: absolute;
  
  bottom: -15px;
  left: -21px;
  width: 30px;
  height: 30px;
  
  border-bottom: solid 2px var(--secondary);
  border-left: solid 2px var(--secondary);
  border-bottom-left-radius: 6px;
  animation: heroTextBeforeAnim 1s ease-out;
}
@keyframes welcomeTextAnim {
  from {
    transform: translateY(-10px);
    opacity: 0;
  } to {
    transform: translateY(0);
    opacity: 1;
  }
}
#welcomeText {
  opacity: 0;
  animation: welcomeTextAnim 1s 0.3s forwards;
}
#heroCanvas {
  position: absolute;
  inset: 0;
  height: 100% !important;
  width: 100% !important;
}

/* INDEX */
.section {
  display: flex;
  justify-content: center;
  flex-direction: column;
  
  box-sizing: content-box;
  margin-block: 20px;
  padding: 40px;
  min-height: 80vh;
  
  background-color: var(--primaryTop);
  border-bottom: solid 4px color-mix(in srgb, var(--primary), var(--primaryTop) 80%);
}
.sectionTop {
  display: flex;
  align-items: center;
  gap: 10px;
}
.sectionTitle {
  width: max-content;
  padding: 20px;
  box-shadow: 0px 3px 6px -4px var(--primary);
  text-shadow: 0px 1px 2px var(--primary);
  outline: solid 1px var(--secondaryTransparent);
  
  background-color: transparent;
  border-radius: 40px;
  opacity: 0;
  transform: translateX(-20px) scale(1.2);
  transition: all 1s;
}
.sectionPartition {
  display: flex;
  gap: 50px;
}
.sectionPartitionImage {
  margin-inline: auto;
  /* RESSOURCE INTENSIVE ? */
  filter: drop-shadow(0 1px 2px var(--primaryTransparent));
  
  opacity: 0;
  transform: translateX(200px) scale(0.8);
}
@keyframes sectionPartitionImageAnim {
  to {
    opacity: 1;
    transform: translateX(0) scale(1);
  }
}
@keyframes sectionPartitionImageAnimLong {
  0% {
    translate: 0 -2px;
  } 50% {
    translate: 0 2px;
  } 100% {
    translate: 0 -2px;
  }
}
.sectionSeen .sectionPartitionImage {
  animation: sectionPartitionImageAnim 1s forwards cubic-bezier(0.5, 1.1, 0.5, 1.1),
             sectionPartitionImageAnimLong 8s infinite cubic-bezier(0.5, 1.1, 0.5, 1.1);
}
.subsectionGrid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-column-gap: 10vw;
  grid-row-gap: 5vh;
  
  border-top: solid 2px var(--primaryTransparent);
  border-bottom: solid 2px var(--primaryTransparent);
  margin-block: 20px;
  padding: 20px 10px;
  border-radius: 4px;
  
  transition: border-top 4s, border-bottom 4s;
}
.subsectionGrid:hover {
  border-top: solid 2px var(--secondaryTransparent);
  border-bottom: solid 2px var(--secondaryTransparent);
  transition: border-top 2s, border-bottom 2s;
}
.sectionSeen .sectionTitle {
  background-color: var(--primaryTransparent);
  opacity: 1;
  border-radius: 5px;
  transform: none;
}
.sectionSee {
  position: relative;
  width: 2.5rem;
  height: 2.5rem;
  
  padding: 5px 10px;
  margin-left: auto;
  text-align: right;
  
  border-radius: 10px;
  border: 1.5px solid var(--contrastLow);
  
  outline: solid 0px transparent;
  
  background: linear-gradient(135deg, var(--contrastLow), var(--contrast)) text;
  color: transparent;
  
  font-size: 1.2rem;
  cursor: pointer;
  
  transition: all 0.3s 0.1s;
}
.sectionSee:hover {
  width: calc(2.5rem + 5ch);
  border: 2px solid var(--contrastLow);
  outline: solid 3px var(--contrastTransparent);
  box-shadow: 0 4px 8px var(--primaryTransparent);
  
  transition: all 0.3s cubic-bezier(0.1, 1.1, 0.2, 1.1);
}
.sectionSee:active {
  outline: solid 4px var(--contrastTransparent);
  transition: outline 0.2s cubic-bezier(0.1, 1.1, 0.2, 1.1);
}
.sectionSee::before {
  content: "voir ";
  
  position: absolute;
  right: 2.5rem;
  
  background: linear-gradient(135deg, var(--contrastLow), var(--contrast)) text;
  color: transparent;
  
  opacity: 0;
  translate: 10px;
  scale: 0.8;
  transition: all 0.3s cubic-bezier(0.1, 1.1, 0.2, 1.1);
}
.sectionSee:hover::before {
  opacity: 1;
  translate: 0;
  scale: 1;
  transition: all 0.3s 0.1s cubic-bezier(0.1, 1.1, 0.2, 1.1);
}
.section p {
  font-size: 1.2em;
  line-height: 1.5em;
}
.section li {
  font-size: 1.1em;
  line-height: 1.5em;
}
.section ul {
  margin-bottom: 1em;
}



/* CONTACT */

#contactList {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  margin-block: 40px;
  width: max-content;
  margin-inline: auto;
  gap: 20px;
}
.contact {
  display: flex;
  width: max-content;
  
  margin-inline: auto;
  padding: 20px;
  border: none;
  
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 20px;
  
  border-radius: 10px;
  background-color: var(--secondaryTransparent);
  
  box-shadow: 0 2px 2px var(--primaryTransparent);
  cursor: pointer;
  
  transition: all 0.32s;
}
@keyframes contactImgAnim {
  from {
    opacity: 0.5;
    background-color: var(--primaryTransparent);
    border-radius: 50%;
  } to {
    opacity: 1;
    background-color: transparent;
    border-radius: 0;
  }
}
.contactImg {
  width: 10vw;
  height: 10vw;
  margin: 10px;
  
  filter: drop-shadow(0 2px 1px var(--primaryTransparent));
  transition: all 0.3s;
  animation: contactImgAnim 1s;
}
.contactName {
  margin-top: auto;
  font-size: 1.1rem;
  color: var(--secondary);
  font-weight: bold;
  
  background: linear-gradient(135deg, var(--contrastLow), var(--contrast)) text;
  
  transition: all 0.25s;
}
.contact:hover/*, .contact:focus*/ {
  transform: translateY(-3px);
  box-shadow: 0 5px 5px var(--primaryTransparent);
  border-radius: 15px;
}
.contact:hover .contactImg/*, .contact:focus .contactImg*/ {
  transform: translateY(-2px) scale(1.05);
  filter: drop-shadow(0 4px 3px var(--primaryTransparent));
}
.contact:hover .contactName/*, .contact:focus .contactName*/ {
  color: transparent;
}
.contact:active {
  transform: translateY(0) scale(0.98);
  box-shadow: 0 5px 5px var(--primaryTransparent);
  border-radius: 20px;
}
.contact:active .contactImg  {
  transform: translateY(-4px) scale(1.05);
  filter: drop-shadow(0 6px 5px var(--primaryTransparent));
}
.contact:active .contactName {
  color: transparent;
}

/* PROJECTS */
.projects {
  display: flex;
  justify-content: center;
  
  margin: 2vw;
  padding: 30px 20px;
  background-color: var(--primaryTop);
  border-radius: 8px;
}
.projectsCarousel {
  display: grid;
  
  grid-template-columns: auto auto auto auto auto;
  width: max-content;
  gap: 2vw;
}
.projectButton {
  display: flex;
  flex-direction: column;
  
  width: max-content;
  margin-inline: auto;
  align-items: center;
  
  gap: 14px;
  
  padding: 16px;
  border: none;
  border-radius: 6px;
  background-color: var(--secondaryTransparent);
  color: var(--secondary);
  cursor: pointer;
  font-size: 1rem;
  font-weight: bold;
  box-shadow: 0 2px 4px var(--primaryTransparent);
  
  transition: all 0.25s;
}
.projectButtonImgContainer {
  position: relative;
  
  width: 10vw;
  height: 10vw;
  border-radius: 5px;
  background-color: var(--secondaryTransparent);
  
  overflow: hidden;
}
.projectButtonImgContainer::after {
  content: "";
  position: absolute;
  inset: 0;
  
  box-shadow: inset 0 1px 1px var(--primaryTransparent);
}
.projectButton img {
  width: 101%;
  height: 101%;
  translate: 0;
  
  transition: all 0.5s ease-out;
}
.projectButton:hover {
  transform: translateY(-2px) scale(1.02);
  box-shadow: 0 2px 6px var(--primaryTransparent);
}
.projectButton:hover img {
  width: 110%;
  height: 110%;
  translate: -4.5% -4.5%;
}
.projectButton:active {
  transform: translateY(-2px) scale(0.98);
  box-shadow: 0 2px 6px var(--primaryTransparent);
  
  transition: all 0.15s;
}
.projectButton:active img {
  width: 101%;
  height: 101%;
  translate: 0;
}

#binaryLogicSection {
  background-image: url("circuitBlack.svg");
  background-size: 105%;
  background-position: 40% 25%;
}

/* BINARY LOGIC */
@keyframes binaryLogicHeroAnim {
  0% {
    background-position: 0 0;
  } 50% {
    background-position: 4vw 2vw;
  } 100% {
    background-position: 8vw 4vw;
  }
}
.binaryLogicHero {
  object-fit: cover;
  width: 100%;
  height: 100%;
  
  /* RESSOURCE INTENSIVE */
  background-image: 
    linear-gradient(transparent 70%, color-mix(in srgb, transparent 70%, var(--primaryTop)) 70%),
    linear-gradient(90deg, transparent 70%, color-mix(in srgb, transparent 70%, var(--primaryTop)) 70%);
  background-size: 4vw 4vw;
  animation: binaryLogicHeroAnim 20s infinite linear;
}
.redAlim {
  stroke-linecap: round;
  stroke-width: 1.5px;
}
.redWire {
  stroke-linecap: round;
  stroke-width: 0.7px;
}
.binaryLogicDemo {
  background-color: var(--primaryTransparent);
  padding: 3vw 4vw;
  box-shadow: 0 2px 8px -2px var(--primary);
  border-radius: 20px;
}
@keyframes binaryCountingAnim {
  0% {
    gap: 0px;
  } 10% {
    gap: 20px;
  } 100% {
    gap: 20px;
  }
}
#binaryCounting {
  display: flex;
  animation: binaryCountingAnim 16s infinite;
  font-size: 1.1rem;
}
#binaryCounting > div:first-child {
  margin-right: 10px;
}
@keyframes binaryRowOne {
  0% {
    transform: translateY(40px);
    opacity: 0;
  } 10% {
    transform: translateY(40px);
    opacity: 0;
  } 20% {
    transform: translateY(0px);
    opacity: 1;
  }
}
#binaryCounting > div > div:first-child {
  animation: binaryRowOne 16s infinite;
  color: var(--green);
}
#binaryCounting > div > div:nth-child(2) {
  color: var(--contrastLow);
}
@keyframes binaryRowTree {
  0% {
    transform: translateY(-40px);
    opacity: 0;
  } 20% {
    transform: translateY(-40px);
    opacity: 0;
  } 30% {
    transform: translateY(0px);
    opacity: 1;
  }
}
#binaryCounting > div > div:nth-child(3) {
  animation: binaryRowTree 16s infinite;
}
#binaryCounting .digitWeight:first-letter {
  color: var(--contrastLow);
}
#binaryCounting sup {
  color: var(--green);
}
#binaryCounting > div {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 10px;
}
@keyframes binaryPlusAnimation {
  0% {
    opacity: 0;
    scale: 0;
    rotate: -90deg;
  } 30% {
    opacity: 0;
    scale: 0;
    rotate: -90deg;
  } 35% {
    opacity: 1;
    scale: 1.1;
    rotate: 0deg;
  } 36% {
    opacity: 1;
    scale: 1;
  }
}
#binaryCounting > .dataColumn + .dataColumn::before {
  position: absolute;
  content: "+";
  
  left: -1rem;
  bottom: 0;
  animation: binaryPlusAnimation 16s infinite;
}
@keyframes binaryCountingResultAnim {
  0% {
    opacity: 0;
    transform: translateX(-10px) scale(0.8);
  } 40% {
    opacity: 0;
    transform: translateX(-10px) scale(0.8);
  } 45% {
    opacity: 1;
    transform: scale(1.05);
  } 46% {
    transform: scale(1);
  }
}
#binaryCounting > div:last-child > div:last-child {
  animation: binaryCountingResultAnim 16s infinite;
}

#binaryConverter {
  display: flex;
  gap: 20px;
  align-items: center;
}
.bitSwitches {
  display: flex;
  gap: 10px;
}
.bitSwitch {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 5px;
}
.switchState {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 40px;
  height: 40px;
  
  background-color: var(--primary);
  outline: solid 2px  var(--primaryTransparent);
  box-shadow: 0 2px 6px var(--primaryTransparent);
  border-radius: 5px;
  
  cursor: pointer;
  user-select: none;
  transition: all 0.25s;
}
.switchState:hover {
  border-radius: 8px;
  outline-color: var(--secondaryTransparent);
  box-shadow: 0 2px 6px var(--secondaryTransparent);
}
.bitSwitchOn .switchState {
  color: var(--primary);
  background-color: color-mix(in srgb, var(--secondary), var(--primary) 15%);
  outline: solid 2px  var(--secondaryTransparent);
  box-shadow: 0 2px 6px var(--secondaryTransparent);
}
.bitSwitchOn .switchState:hover {
  border-radius: 8px;
  outline-color: var(--primaryTransparent);
  box-shadow: 0 2px 6px var(--primaryTransparent);
}
.switchValue {
  opacity: 0.5;
  scale: 0.9;
  
  transition: all 0.5s;
}
.bitSwitchOn .switchValue {
  opacity: 1;
  scale: 1;
}
#binaryConverter span {
  font-size: 1.5em;
}

#truthTables {
  display: grid;
  grid-template-columns: auto auto auto;
  gap: 2vw;
  margin-block: 50px;
}

/* Binary Logic Playground */
.binaryLogicPlayground {
  position: relative;
  width: 100%;
  height: 80vh;
  
  background-color: var(--primary);
  border-radius: 20px;
  border: solid 1.5px color-mix(in srgb, var(--secondary), var(--primary));
  box-shadow: 0 2px 8px 4px var(--primaryTransparent);
  overflow: hidden;
}
.binaryLogicPlayground svg {
  user-select: none;
}
.playgroundLeftPannel {
  position: absolute;
  
  width: 15vw;
  height: 100%;
  padding: 10px 5px;
  
  border-collapse: collapse;
  
  background-color: var(--secondaryTransparent);
  overflow-y: auto;
  scrollbar-color: var(--primaryTop) color-mix(in srgb, var(--primary), var(--primaryTransparent));
  scrollbar-width: thin;
  backdrop-filter: blur(4px);
}
.playgroundChoiceCategory {
  margin-bottom: 0px;
  transition: all 0.2s;
}
.expended { 
  margin-bottom: 4px;
}
.playgroundChoiceCategory > span {
  position: relative;
  display: block;
  
  width: 100%;
  padding: 4px;
  padding-left: 10px;
  margin-bottom: 0px;
  border-bottom: solid 2px var(--secondaryTransparent);
  user-select: none;
  cursor: pointer;
  
  border-radius: 2px;
  
  transition: 0.2s;
}
.playgroundChoiceCategory > span:hover {
  padding-left: 12px;
  background-color: var(--secondaryTransparent);
  border-radius: 4px;
}
.playgroundChoiceCategory > span:active {
  padding-left: 11px;
  background-color: var(--secondaryTransparent);
  border-radius: 6px;
}
.playgroundChoiceCategory > span::after {
  position: absolute;
  content: "▽";
  right: 10px;
  font-size: 12px;
  rotate: -90deg;
  
  transition: all 0.2s;
}
.expended > span { 
  margin-bottom: 4px;
}
.expended > span::after {
  content: "▼";
  rotate: 0deg;
}
.playgroundChoices {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 5px;
  visibility: hidden;
  max-height: 0px;
  
  background-color: var(--primaryTransparent);
  border-radius: 50px;
  padding: 5px;
  overflow: hidden;
  
  transition: all 0.2s, visibility 0s, padding 0s;
}
.expended > .playgroundChoices {
  visibility: visible;
  max-height: 500px;
  border-radius: 10px;
  padding: 10px;
}
.playgroundChoice {
  display: flex;
  justify-content: center;
  height: max-content;
  cursor: pointer;
}
.playgroundChoice > svg {
  width: 4vw;
  height: 4vw;
  
  transition: all 0.2s;
}
.playgroundChoice:hover > svg {
  filter: drop-shadow(0 2px 4px var(--primaryTransparent));
  scale: 1.05;
}
.playgroundField {
  width: 100%;
  height: 100%;
}
@keyframes addingGateAnim {
  from {
    transform: scale(0.95) translateY(0);
    rotate: 0deg;
  } to {
    transform: scale(1) translateY(-2px);
    rotate: 5deg;
  }
}
.addingGate {
  position: absolute;
  width: 4vw;
  height: 4vw;
  filter: drop-shadow(0 4px 4px var(--primaryTop));
  animation: addingGateAnim 0.5s forwards;
  cursor: grabbing;
}
.playgroundField > g[gate] {
  transition: filter 0.1s;
  cursor: grab;
}
.playgroundField > g[gate]:hover {
  filter: drop-shadow(0 2px 2px var(--primaryTop));
}
.playgroundField > g[gate="OneBitInput"] {
  cursor: pointer;
  .ring {
    transition: stroke 0.3s 0.1s, fill 0.2s;
  }
  .shadow {
    transition: all 0.3s 0.1s;
  }
  text {
    transition: all 0.2s;
  }
}
.playgroundField > g[gate="OneBitInput"].enabled {
  .ring {
    stroke: var(--activatedHigh);
    stroke-width: 2.5px;
    fill: var(--activatedLow);
    transition: stroke 0.2s, fill 0.3s 0.1s;
  }
  .shadow {
    stroke: #a00;
    transition: all 0.2s;
  }
  text {
    fill: #fdd;
    transition: all 0.2s;
  }
}
.movingGate {
  filter: drop-shadow(0 4px 4px var(--primaryTop));
  cursor: grabbing !important;
}
.oneBitConnector {
  transition: all 0.2s;
  cursor: cell
}
.oneBitConnector:hover {
  stroke: var(--contrast);
  stroke-width: 2px;
  filter: drop-shadow(0 0 4px var(--contrast));
}
.wire {
  /* RESSOURCE INTENSIVE */
  filter: drop-shadow(0 0 1px var(--primary));
  cursor: cell;
  transition: filter 0.2s;
}
.wire:hover {
  /* RESSOURCE INTENSIVE */
  filter: drop-shadow(0 0 0.5px var(--contrast));
}

.oneBitConnector.activated {
  stroke: color-mix(in srgb, var(--activatedLow), var(--activatedHigh));
  fill: var(--activatedLow);
}
.wire.activated {
  stroke: var(--activatedLow);
}






/* RESPONSIVE */
@media (max-width: 800px) {
  .sectionPartition {
    flex-direction: column;
    gap: 10px;
  }
  .sectionPartitionImage {
    width: 50%;
  }
  .subsectionGrid {
    grid-template-columns: 1fr;
  }
}
@media (max-width: 600px) {
  header {
    --offset: 0.8vw;
    --padding: 4px;
  }
  .headerField {
    margin-inline: 0.8vw;
    padding: 1.5vw 0.8vw;
  }
  .headerField + .headerField::before {
    left: -0.4vw;
    height: 60%;
    top: 20%;
    opacity: 0.15;
  }
  .section {
    padding: max(4vw, 10px);
  }
  .projects {
    padding: 3vw;
  }
  .projectsCarousel {
    grid-template-columns: 1fr 1fr 1fr;
  }
  .projectButton {
    width: 100%;
  }
  .projectButtonImgContainer {
    width: 20vw;
    height: 20vw;
  }
  #contactList {
    grid-template-columns: 1fr 1fr;
    gap: 10px;
  }
  .contact {
    width: 100%;
    padding: 20px 10px;
  }
  .contactImg {
    width: 20vw;
    height: 20vw;
  }
  .sectionSee:hover {
    width: 2.5rem;
  }
  .sectionSee:before {
    display: none;
  }
}
@media (max-width: 475px) {
  #logo {
    height: 80%;
  }
  .headerField {
    margin-inline: 0.6vw;
    padding: 2vw 0.6vw;
  }
  .headerField + .headerField::before {
    left: -0.3vw;
    height: 40%;
    top: 30%;
    opacity: 0.1;
  }
  .sectionTitle {
    font-size: 1.8em;
    padding: 15px;
  }
}
@media (max-width: 450px) {
  #logo {
    height: 75%;
  }
  .headerField {
    margin-inline: 0.4vw;
    padding: 2vw 0.4vw;
    font-size: 0.9em;
  }
  .headerField + .headerField::before {
    display: none;
  }
  .headerField:first-letter {
    font-size: 1em;
  }
}
/* small screen mode */
@media (max-width: 390px) {

}